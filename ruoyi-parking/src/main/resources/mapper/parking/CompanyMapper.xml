<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.parking.mapper.CompanyMapper">
    
    <resultMap type="Company" id="CompanyResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="adress"    column="adress"    />
        <result property="email"    column="email"    />
    </resultMap>

    <sql id="selectCompanyVo">
        select id, name, adress, email from company
    </sql>

    <select id="selectCompanyList" parameterType="Company" resultMap="CompanyResult">
        <include refid="selectCompanyVo"/>
        <where>  
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="adress != null  and adress != ''"> and adress = #{adress}</if>
            <if test="email != null  and email != ''"> and email = #{email}</if>
        </where>
    </select>
    
    <select id="selectCompanyById" parameterType="Long" resultMap="CompanyResult">
        <include refid="selectCompanyVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertCompany" parameterType="Company" useGeneratedKeys="true" keyProperty="id">
        insert into company
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">name,</if>
            <if test="adress != null">adress,</if>
            <if test="email != null">email,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">#{name},</if>
            <if test="adress != null">#{adress},</if>
            <if test="email != null">#{email},</if>
         </trim>
    </insert>

    <update id="updateCompany" parameterType="Company">
        update company
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null">name = #{name},</if>
            <if test="adress != null">adress = #{adress},</if>
            <if test="email != null">email = #{email},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteCompanyById" parameterType="Long">
        delete from company where id = #{id}
    </delete>

    <delete id="deleteCompanyByIds" parameterType="String">
        delete from company where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>